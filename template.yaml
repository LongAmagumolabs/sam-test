AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-test-helloworld

  Sample SAM Template for sam-test-helloworld

Parameters:
  Stage:
    Type: String
    Default: prod
  CognitoUserPoolName:
    Type: String
    Default: SamTestUserPoolName
  CognitoUserPoolClientName:
    Type: String
    Default: DangTestClientName

Globals:
  Function:
    Timeout: 600
    MemorySize: 128

Resources:
  LongTestHelloWorldFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: LongTestHelloWorldFunctionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: LongTestSam_S3Permissions
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                Resource: 
                  - arn:aws:s3:::ebics-test-bucket/*      
              - Effect: Allow
                Action: s3:ListBucket
                Resource: arn:aws:s3:::ebics-test-bucket
                Condition:
                  StringLike:
                    s3:prefix:
                    - "*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
              - Effect: Allow
                Action:
                  - cognito-idp:AdminInitiateAuth
                Resource: "*"
  UserPoolDomain: 
    Type: AWS::Cognito::UserPoolDomain 
    Properties:
      UserPoolId: !Ref MyCognitoUserPool 
      Domain: "sam-authenticate-test"
  MyCognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Ref CognitoUserPoolName
      AutoVerifiedAttributes: 
        - email
      UsernameAttributes:
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 8
      Schema:
        - AttributeDataType: String
          Name: email
          Required: false
  MyCognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref MyCognitoUserPool
      ClientName: !Ref CognitoUserPoolClientName
      ExplicitAuthFlows: 
        - ALLOW_USER_SRP_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
        - ALLOW_ADMIN_USER_PASSWORD_AUTH
      AllowedOAuthFlowsUserPoolClient: true
      SupportedIdentityProviders: 
        - COGNITO
      AllowedOAuthFlows: 
        - code
        - implicit 
      AllowedOAuthScopes:
        - email
        - openid
        - profile
        - aws.cognito.signin.user.admin
      GenerateSecret: false
      CallbackURLs:
        - 'https://samtest/callback' 
      LogoutURLs:
        - 'https://samtest/logout'
  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage
      Cors: "'*'"
      Auth:
        DefaultAuthorizer: MyCognitoAuthorizer
        Authorizers:
          MyCognitoAuthorizer:
            UserPoolArn: !GetAtt MyCognitoUserPool.Arn
  HelloWorldFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: hello_world/
      Handler: app.lambda_handler
      Runtime: python3.9
      Environment:
        Variables:
          USER_POOL_ID: !Ref MyCognitoUserPool
          APP_CLIENT_ID: !Ref MyCognitoUserPoolClient
          COMMON_NAME: ebics.ecodrop.net
          COUNTRY: FR
          DEBTOR_BANK_NAME: BNP Paribas
          DEBTOR_BIC: BNPAFRPPXXX
          DEBTOR_IBAN: FR7600002000105555555555521
          HOST_ID: EBIXQUAL
          HOST_URL: https://server-ebics.webank.fr:28103/WbkPortalFileTransfert/EbicsProtocol
          LOCALITY: SAINT-CLOUD
          ORGANIZATION: ECODROP
          ORGANIZATION_UNIT: IT
          PARTNER_ID: AMAGUMOLAITEST
          PASSPHRASE: mysecret
          S3_BUCKET: ebics-test-bucket
          S3_IDS_FOLDER: order
          S3_KEY_FOLDER: keys
          S3_LETTER_FOLDER: letters
          S3_TRANSFER_FOLDER: transfers
          STATE: IDF
          USER_ID: AMAGUMOLAITEST
          VERSION: H003
      Architectures:
        - x86_64
      Role: !GetAtt LongTestHelloWorldFunctionRole.Arn
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /{proxy+}
            RestApiId: !Ref MyApi
            Method: any
        SignIn:
          Type: Api
          Properties:
            Auth:
              Authorizer: NONE
            Path: /ebics/sign-in
            RestApiId: !Ref MyApi
            Method: POST

Outputs:
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/{proxy+}/"
  HelloWorldFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
  LongTestHelloWorldFunctionRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt LongTestHelloWorldFunctionRole.Arn

